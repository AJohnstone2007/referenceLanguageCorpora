<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1977) -->
<HEAD>
<LINK REL=TOP HREF="UG_1.HTM">
<LINK REL=UP HREF="UG_38.HTM">
<LINK REL=PREV HREF="UG_41.HTM">
<LINK REL=NEXT HREF="UG_43.HTM">
<TITLE>2.4.4   Subprojects</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1977)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING42></A>

<DIV>
<P><A HREF="UG_43.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="UG_41.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="UG_38.HTM"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="UG_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="UG_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="UG_85.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>2.4   Further uses of the MLWorks project system</P>

</DIV>
<A NAME=HEADING42-0></A>
<H1>2.4.4   Subprojects</H1>
<P>You can<A NAME=MARKER-2-557></A> have one or more MLWorks projects as subprojects of a main project. This allows applications to be organized into manageable parts which depend on each other. Note that circular subprojects are not permitted -- for example, you cannot have two projects defined as subprojects of each other. Subprojects are transitive, which means that if you add a subproject to a project, you are also adding all of the subproject's subprojects too.</P>
<P>Subprojects are added to the main project by clicking on <B>Set Subprojects</B> in the project workspace. This calls up the "Project Properties - Subprojects" dialog. Added subprojects are shown in the Subprojects text field of the project workspace.</P>
<P><IMG ALIGN=TOP SRC=UG42IM26.GIF><A NAME=MARKER-10-558></A></P>
<P>Figure 2.12   Project Properties - Subprojects</P>
<P>In our example, click on <B>Add</B> to call up a file selection dialog, and add the project <CODE>fac.mlp</CODE>, in the <CODE>examples<A NAME=MARKER-10-559></A>\projects<A NAME=MARKER-10-560></A>\subproject</CODE> <A NAME=MARKER-10-561></A>folder. Once you have added this subproject to the main project, you can open it in the project workspace by clicking on <B>Open</B>. The focus moves to the project workspace. Note that the "Project Properties - Subprojects" dialog remains open, but now shows any of the subprojects of <CODE>fac.mlp</CODE>. Clicking on <B>Back</B> closes the subproject and returns you to the main project in the project workspace.</P>
<P>You should be aware of the following features of subprojects:</P>
<UL>
<LI>A <A NAME=MARKER-10-562></A>folder which is on the source path of a subproject does not need to be included in the source path of the main project, unless there are source files in the <A NAME=MARKER-10-563></A>folder that are used by the main project but not by the subproject.
<LI>Each subproject keeps the mode it was saved with, regardless of the mode of the main project. For example, if a subproject is saved with its mode set to Release, all of the subproject's object files will be placed in the Release <A NAME=MARKER-10-564></A>folder on compilation of the main project, even if the main project has its mode set to Debug.
<LI>In the project workspace only those files that are used by the main project are displayed. None of the subproject files are displayed. This allows you to concentrate on the dependencies within the main project (although on compilation the project system checks the files in all the subprojects too, and brings them up to date if this is necessary).
</UL>
<P>With <CODE>fac.sml</CODE> added to <CODE>myproject.mlp</CODE> as a subproject, the target source files of the main project (such as <CODE>sumxy.sml</CODE> and <CODE>xval.sml</CODE>) can refer to the <CODE>fac</CODE> function defined in the target source files of the subproject.</P>
<P>A note of warning concerning the use of different configurations with subprojects: setting the main project to have a specific configuration affects the subprojects in one of two ways:</P>
<UL>
<LI>If the subproject does <I>not</I> have a configuration with the same name defined, then the subproject is compiled with no configuration information.
<LI>If the subproject has a configuration with the same name as the configuration of the main project, it is compiled with that configuration set as the current one. Note that the subproject uses its own configuration source and library path information, and not the configuration information of the main project.<A NAME=MARKER-2-565></A>
</UL>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>MLWorks User Guide version 2.0 for Windows - 30 Jul 1998</ADDRESS>
<P><A HREF="UG_43.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="UG_41.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="UG_38.HTM"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="UG_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="UG_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="UG_85.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>Generated with <A HREF="http://www.harlequin.com/webmaker/">Harlequin WebMaker</A></P>

</DIV>
</BODY>
</HTML>
