<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1977) -->
<HEAD>
<LINK REL=TOP HREF="UG_1.HTM">
<LINK REL=UP HREF="UG_74.HTM">
<LINK REL=PREV HREF="UG_77.HTM">
<LINK REL=NEXT HREF="UG_79.HTM">
<TITLE>6.4   The profile tool</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1977)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING78></A>

<DIV>
<P><A HREF="UG_79.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="UG_77.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="UG_74.HTM"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="UG_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="UG_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="UG_85.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>6 Profiling</P>

</DIV>
<A NAME=HEADING78-0></A>
<A NAME=UID-profiler-858814></A>
<H1>6.4   The profile tool</H1>
<P>To enter the profile tool, type a declaration at the listener prompt and, instead of hitting Return, press the <B>Profile</B> button. You can also enter the profiler tool by passing your declaration to the <CODE>Shell.Profile.profile</CODE> function.</P>
<P>We shall use the function <CODE>pyramid</CODE>, defined in terms of several other functions, in our examples:</P>
<PRE>
local
  fun a 0 l = l
    | a x l = a (x-1) (x::l);
  fun len (n,[]) = n
    | len (n,x::xs) = len(n+1, xs);
  fun addlens (a,[]) = a 
    | addlens (a,x::xs) = addlens(a+len (0,x), xs);
  fun p (0,l) = l
    | p (n,l) = p(n-1,a n l);
  fun b (0,l) = addlens (0,l)
    | b (n,l) = b(n-1,p(n,[])::l);
in 
  fun pyramid n = b (n, []);
end;
</PRE>
<P>These functions, written in order to demonstrate the profiler, exhibit a range of execution time and allocation characteristics. The <CODE>pyramid</CODE> function computates three-dimensional triangular numbers. </P>
<P>Below is shown the result of profiling <CODE>pyramid 200</CODE> with the definitions above in force. Note that exact figures will vary from machine to machine, and from one evaluation to another, so if you profile this function call yourself you should not expect to see identical results.</P>
<P><A NAME=MARKER-10-773></A><IMG ALIGN=TOP SRC=UG78IM38.GIF></P>
<P>Figure 6.1   The MLWorks profile tool.</P>
<P>At the top of the profile tool you can read the overall profile of the evaluation. At the very top is printed the total CPU time taken by the evaluation, in seconds. This total includes the number of <I>ticks</I> that occurred; the CPU time for each function called in the evaluation is measured by interrupting evaluation every tick (10 milliseconds) and identifying the top function on the stack. (You can change the tick rate if you use the built-in <CODE>MLWorks.Profile.profile</CODE> or <CODE>Shell.Profile.profileFull</CODE> functions.)</P>
<P>Beneath the total time is the profile time. This is the amount of CPU time during the evalation that was taken by the larger-scale profiling operations. </P>
<P>Beneath the profile time are the total ML and garbage collection (GC) times. These totals show what amounts of the total time (after profile time has been subtracted) were taken up by execution of the ML code itself and by garbage collection. ML time includes some of the profiler operations done at a very fine granularity which are not timed separately.</P>
<P>Beneath ML and GC time you can read the total amount of space allocated by the evaluation. Beneath that, the total amount of that space that was copied by the garbage collector during evaluation is shown. This latter value is therefore a measure of how much work the garbage collector did. </P>
<P>"Total copying" is also a measure of the ephemerality of the allocated data; if a program allocates 9000K but only 180K is copied, then we can conclude that the rest (8820K) died before the program reached a garbage collection point. However, note that the garbage collector will look at long-lived data more than once, so it is possible for "Total copying" to exceed "Total allocation".</P>
<P>Beneath the overall profile is a graph pane. Each bar represents a function, and the height of the bar corresponds by default to how much processor time that function used. The vertical axis is calibrated in percent of total time taken. The Time / Space slider above the graph can turn this into a weighted average of the time and allocation factors. Selecting a bar gives the figures for the function it represents below the graph. Note the following points:</P>
<UL>
<LI>CPU time is measured by interrupting the evaluation at every tick (10 milliseconds), and identifying the top function on the stack. 
<LI>There are two separate bars for the function <CODE>a</CODE>. It is a curried function, that is it takes two arguments, and MLWorks measures separately time taken in applications to the first argument and to the second argument. 
<LI>As well as the bars for the functions you call, there are usually two other bars on the profiler, for functions called <CODE>wrapper</CODE> and <CODE>&lt;Setup&gt;</CODE>. These are internal MLWorks functions and can be ignored. They generally have negligible cost, both in time and space. 
</UL>
<P>As well as the time information, the profiler shows how much space each function allocated. The height of the bars can be made to reflect allocation rather than CPU time. Moving the Time / Space slider on the profiler alters the bars to reflect a weighted average of the two factors, depending on how far you move the slider along. The figure below shows the same profile as before, but the slider has been moved to the 50% mark.</P>
<P><A NAME=MARKER-10-774></A><IMG ALIGN=TOP SRC=UG78IM39.GIF></P>
<P>Figure 6.2   <A NAME=MARKER-9-775></A>A profile with equal weighting of allocation and time.</P>
<P>If you choose <B>Usage &gt; Sort</B>, the profile tool sorts the bars in decreasing order of size. <A HREF="#MARKER-9-777">Figure 6.3</A> shows what <A HREF="#MARKER-9-775">Figure 6.2</A> looks like after sorting. </P>
<P><A NAME=MARKER-10-776></A><IMG ALIGN=TOP SRC=UG78IM40.GIF></P>
<P>Figure 6.3   <A NAME=MARKER-9-777></A>The profile graph after being sorted. </P>
<P>When you use the profile tool, the results will appear in the same window each time, replacing the previous profile information. However you can take a "snapshot" of the <A NAME=MARKER-2-778></A>profile tool at any point with the <B>Usage &gt; Duplicate</B> menu item. </P>
<P>Additionally, with the <B>Peel Off</B> button, you can create a dialog containing a text copy of the profile for the function currently selected. </P>
<P>Both the profile tool and the function profile dialog have an <B>Edit</B> button which allow you to edit the source code for the current function in your preferred editor.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC --><DL>
<DT><A REL=BELOW HREF="UG_79.HTM#HEADING79-0"><B>6.4.1  </B> - Controlling the layout of the profiler graph</A>
<DD>
</DL>


</DIV>

<HR>
<ADDRESS>MLWorks User Guide version 2.0 for Windows - 30 Jul 1998</ADDRESS>
<P><A HREF="UG_79.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="UG_77.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="UG_74.HTM"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="UG_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="UG_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="UG_85.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>Generated with <A HREF="http://www.harlequin.com/webmaker/">Harlequin WebMaker</A></P>

</DIV>
</BODY>
</HTML>
