<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1977) -->
<HEAD>
<LINK REL=TOP HREF="UG_1.HTM">
<LINK REL=UP HREF="UG_22.HTM">
<LINK REL=PREV HREF="UG_43.HTM">
<LINK REL=NEXT HREF="UG_45.HTM">
<TITLE>2.6   The MLWorks batch compiler</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1977)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING44></A>

<DIV>
<P><A HREF="UG_45.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="UG_43.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="UG_22.HTM"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="UG_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="UG_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="UG_85.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>2 Building Applications</P>

</DIV>
<A NAME=HEADING44-0></A>
<A NAME=UID-compiler-864149></A>
<H1>2.6   <A NAME=MARKER-9-575></A>The MLWorks batch compiler</H1>
<P><A NAME=MARKER-10-576></A>You can compile source files without running the MLWorks interactive environment by invoking the MLWorks compiler as a batch process. MLWorks provides a script called <CODE>mlbatch.bat</CODE> for this purpose. This script takes a series of unit names and produces object files from the unit sources.<A NAME=MARKER-10-577></A></P>
<P>However, you do not need to use <CODE>mlbatch.bat</CODE> to compile files that are suitable for use outside the interactive environment. All files you compile in the interactive environment are compiled equivalently: every unit you compile down to an object file is compiled ready for execution outside the interactive environment. You can pass it to the MLWorks runtime system with the <CODE><A NAME=MARKER-10-578></A>mlpervasive<A NAME=MARKER-2-579></A>.bat</CODE> script. </P>
<P>But if you do want to execute applications you developed in the interactive environment outside the interactive environment, you must bear in mind that there are important differences between what we introduced in <A HREF="UG_9.HTM#MARKER-9-202">Section 1.5</A> as the <I>batch context</I> and the <I>interactive context</I>. </P>
<P>Recall that the interactive context is what is available to you in the interactive environment. We distinguish it from the <A NAME=MARKER-2-580></A>batch context, which is what is available to a file being <A NAME=MARKER-2-581></A>batch-compiled. The interactive and batch contexts both contain: </P>
<DL>
<DT><DD>1.  <A NAME=MARKER-9-582></A>The Standard ML language.
<DT><DD>2.  <A NAME=MARKER-9-583></A>The <I><A NAME=MARKER-2-584></A>pervasive</I> library, which is a built-in library available at top level in MLWorks. It is provided in the top-level structure <CODE><A NAME=MARKER-2-585></A>MLWorks</CODE>.
<DT><DD>3.  <A NAME=MARKER-9-586></A>The <A NAME=MARKER-2-587></A><A NAME=MARKER-2-588></A>Standard ML Basis library's <CODE>General</CODE> structure, and various top-level functions, exceptions, and types that the <CODE><A NAME=MARKER-2-589></A>General</CODE> structure defines. It is also built in to MLWorks at the top level.
</DL>
<P>The <A NAME=MARKER-2-590></A>interactive context contains two further items: </P>
<DL>
<DT><DD>4.  <A NAME=MARKER-9-591></A>The <CODE><A NAME=MARKER-2-592></A>Shell</CODE> structure, which is a collection of functions and options connected with the MLWorks interactive environment. Like the <CODE>MLWorks</CODE> and <CODE>General</CODE> structures it is always available at the top level.
<DT><DD>5.  <A NAME=MARKER-9-593></A>Any modifications you make to the <A NAME=MARKER-2-594></A>interactive context by causing declarations to be evaluated.
<DT><DD>For instance, binding the identifier <CODE>x</CODE> to the value 5 counts as a modification of the interactive context: it introduces a new binding to the top level. You modify the interactive context similarly whenever you load units from source or object files. 
</DL>
<P>The <A NAME=MARKER-2-595></A>batch context does not include the last two items for good reason. The bindings you create in the interactive context are typically transient, and should not be allowed to affect how the compilation of a set a permanent application sources should turn out. The <CODE>Shell</CODE> structure is not ephemeral, but since it relates to details of the interactive MLWorks environment -- like the value-printer settings, editor preferences, and how to start running the GUI -- it makes no sense to make it visible in the <A NAME=MARKER-2-596></A>batch <A NAME=MARKER-2-597></A>context<A NAME=MARKER-2-598></A>. </P>
<A NAME=LINK-compiler-lastpage></A><A NAME=LINK-libs-firstpage></A><!-- FM pgf ignored -->

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>MLWorks User Guide version 2.0 for Windows - 30 Jul 1998</ADDRESS>
<P><A HREF="UG_45.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="UG_43.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="UG_22.HTM"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="UG_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="UG_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="UG_85.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>Generated with <A HREF="http://www.harlequin.com/webmaker/">Harlequin WebMaker</A></P>

</DIV>
</BODY>
</HTML>
