<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1977) -->
<HEAD>
<LINK REL=TOP HREF="RM_1.HTM">
<LINK REL=UP HREF="RM_18.HTM">
<LINK REL=PREV HREF="RM_56.HTM">
<LINK REL=NEXT HREF="RM_58.HTM">
<TITLE>3.5   Threads: the Threads structure</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1977)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING57></A>

<DIV>
<P><A HREF="RM_58.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="RM_56.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="RM_18.HTM"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="RM_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="RM_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="RM_418.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>3 The MLWorks Pervasive Library </P>

</DIV>
<A NAME=HEADING57-0></A>
<A NAME=UID-mlworks-886322></A>
<H1>3.5   Threads<A NAME=MARKER-2-233></A><A NAME=MARKER-2-234></A>: the Threads structure</H1>
<P>The MLWorks threads interface is provided by the structure <CODE>MLWorks.Threads</CODE>. Conceptually, the MLWorks thread mechanism consists of a set of concurrently evaluating expression closures, or "threads", that share memory. </P>
<P>All threads are assigned a unique identifier, of type <CODE>thread_id</CODE>, and a thread number. All threads have a status, represented with the <CODE>'a result</CODE> datatype.</P>
<P><B>Warning:</B> You should rely only on thread identifiers for uniquely identifying threads; thread numbers are not important. Thread numbers are handed out sequentially as threads are created, and are provided as a simple reference for, say, application-debugging purposes. Thread numbers are not necessarily unique: after a sufficiently large number, they may wrap around and start again. </P>
<P>At startup, MLWorks consists of two threads: a master thread, and a single evaluation thread. When running in TTY or GUI mode, this latter thread is linked to the shell interface; otherwise, it executes a prespecified function (for example, a function specified by <CODE>MLWorks.Deliver.deliver</CODE> above). </P>
<P>The threads are run in a scheduler loop. By default, they behave like coroutines. That is, only one thread executes at a time until it either finishes or yields control to another, at which point it sleeps waiting to be woken by a "yield" command. Threads can also be run interleaved, using the <CODE>MLWorks.Threads.Internal.Preemption</CODE> mechanism, which interrupts processes after a user-specified number of milliseconds.</P>
<P>The <CODE>'a result</CODE> datatype is used to record the status of a thread. A thread can be polled for its status with the <CODE>result</CODE> function.</P>
<P>Thread pre-emption mode implements the interleaved execution of threads. You specify a pre-emption interval in milliseconds using the <CODE>set_interval</CODE> function. Each thread is allowed to proceed with its evaluation for this time before being "pre-empted" by the next thread on the scheduling loop.</P>
<P><B>Warning:</B> If you are interleaving a thread with the interactive GUI shell, any printed output from your thread is liable to be interpreted by the GUI as input to the shell.</P>

</DIV>

<DIV>

<DIV>

<!-- TOC --><DL>
<DT><A REL=BELOW HREF="RM_58.HTM#HEADING58-0"><B></B>Threads </A>
<DD>
<DT><A REL=BELOW HREF="RM_59.HTM#HEADING59-0"><B></B>'a&nbsp;thread</A>
<DD>
<DT><A REL=BELOW HREF="RM_60.HTM#HEADING60-0"><B></B>thread_id</A>
<DD>
<DT><A REL=BELOW HREF="RM_61.HTM#HEADING61-0"><B></B>'a&nbsp;result</A>
<DD>
<DT><A REL=BELOW HREF="RM_62.HTM#HEADING62-0"><B></B>fork</A>
<DD>
<DT><A REL=BELOW HREF="RM_63.HTM#HEADING63-0"><B></B>result</A>
<DD>
<DT><A REL=BELOW HREF="RM_64.HTM#HEADING64-0"><B></B>sleep</A>
<DD>
<DT><A REL=BELOW HREF="RM_65.HTM#HEADING65-0"><B></B>wake</A>
<DD>
<DT><A REL=BELOW HREF="RM_66.HTM#HEADING66-0"><B></B>yield</A>
<DD>
<DT><A REL=BELOW HREF="RM_67.HTM#HEADING67-0"><B></B>all</A>
<DD>
<DT><A REL=BELOW HREF="RM_68.HTM#HEADING68-0"><B></B>children</A>
<DD>
<DT><A REL=BELOW HREF="RM_69.HTM#HEADING69-0"><B></B>get_id</A>
<DD>
<DT><A REL=BELOW HREF="RM_70.HTM#HEADING70-0"><B></B>get_num</A>
<DD>
<DT><A REL=BELOW HREF="RM_71.HTM#HEADING71-0"><B></B>id</A>
<DD>
<DT><A REL=BELOW HREF="RM_72.HTM#HEADING72-0"><B></B>kill</A>
<DD>
<DT><A REL=BELOW HREF="RM_73.HTM#HEADING73-0"><B></B>parent</A>
<DD>
<DT><A REL=BELOW HREF="RM_74.HTM#HEADING74-0"><B></B>raise_in</A>
<DD>
<DT><A REL=BELOW HREF="RM_75.HTM#HEADING75-0"><B></B>state</A>
<DD>
<DT><A REL=BELOW HREF="RM_76.HTM#HEADING76-0"><B></B>yield_to</A>
<DD>
<DT><A REL=BELOW HREF="RM_77.HTM#HEADING77-0"><B></B>set_handler</A>
<DD>
<DT><A REL=BELOW HREF="RM_78.HTM#HEADING78-0"><B></B>reset_fatal_status</A>
<DD>
<DT><A REL=BELOW HREF="RM_79.HTM#HEADING79-0"><B></B>get_interval</A>
<DD>
<DT><A REL=BELOW HREF="RM_80.HTM#HEADING80-0"><B></B>set_interval</A>
<DD>
<DT><A REL=BELOW HREF="RM_81.HTM#HEADING81-0"><B></B>on</A>
<DD>
<DT><A REL=BELOW HREF="RM_82.HTM#HEADING82-0"><B></B>start</A>
<DD>
<DT><A REL=BELOW HREF="RM_83.HTM#HEADING83-0"><B></B>stop</A>
<DD>
<DT><A REL=BELOW HREF="RM_84.HTM#HEADING84-0"><B>3.5.1  </B> - Mutual exclusion primitives </A>
<DD>
</DL>


</DIV>

<HR>
<ADDRESS>MLWorks Reference Manual version 2.0 - 29 Jul 1998</ADDRESS>
<P><A HREF="RM_58.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="RM_56.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="RM_18.HTM"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="RM_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="RM_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="RM_418.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>Generated with <A HREF="http://www.harlequin.com/webmaker/">Harlequin WebMaker</A></P>

</DIV>
</BODY>
</HTML>
