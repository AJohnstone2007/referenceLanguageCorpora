<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1977) -->
<HEAD>
<LINK REL=TOP HREF="RM_1.HTM">
<LINK REL=UP HREF="RM_254.HTM">
<LINK REL=PREV HREF="RM_255.HTM">
<LINK REL=NEXT HREF="RM_257.HTM">
<TITLE> addConnectDialog</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1977)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING256></A>

<DIV>
<P><A HREF="RM_257.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="RM_255.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="RM_254.HTM"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="RM_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="RM_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="RM_418.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>4.8   Editor support: The Editor structure </P>

</DIV>
<A NAME=HEADING256-0></A>
<H1> <A NAME=MARKER-2-512></A><A NAME=MARKER-9-513></A>addConnectDialog</H1>
<P><I>Function</I></P>
<H3>Structure</H3>
<dl><dd><pre>Shell.Editor.Custom</pre></dl>
<H3>Type</H3>
<DL><DD><PRE>val addConnectDialog: (string * string * string list) -&gt; unit</PRE></DD></DL>
<H3>Syntax:</H3>
<dl><dd><pre>addConnectDialog (<I>name</I>, <I>dialog-name</I>, <I>commands</I>) -&gt; ()</pre></dl>
<H3>Arguments</H3>
<DL>
<DT><I>name</I><DD> A name to be associated with a dialog.
<DT><I>dialog-name</I><DD> A dialog name.
<DT><I>commands</I><DD> A list of editing commands.
</DL>
<H3>Values</H3>
<dl><dd><pre>()</pre></dl>
<H3>Description</H3>
<P> Associates the name <I>name</I> with the editor connect-dialog <I>dialog-name</I> and with a list of editing commands <I>commands</I>. The value of <I>dialog-name</I> can be either <CODE>&quot;Emacs&quot;</CODE> for Emacs or <CODE>&quot;DDE&quot;</CODE> for DDE.</P>
<DL>
<DT><CODE>&quot;Emacs&quot;</CODE><DD> UNIX only. Used for connecting GNU-Emacs-style editors via a sockets mechanism. Despite being called <CODE>&quot;Emacs&quot;</CODE>, this socket-based dialog provides a general way to talk to editors. However, only a few editors can accept commands in this way. 
<P>If the ordinary Emacs server behavior does not quite meet your needs, you could change specify a different dialog string. To use this method you must still set up a copy of Emacs to be a server, using the procedure described in Chapter 1 of the <I>MLWorks User's Guide</I>.</P>
<DT><CODE>&quot;DDE&quot;</CODE><DD> Windows only. Uses the "execute string" form of Dynamic Data Exchange to allow editors to be controlled remotely.
</DL>
<H3>Example</H3>
<P>The connect dialog for an Emacs server could be defined by:</P>
<DL><DD><PRE>let
 val find_file = &quot;(find-file \&quot;%f\&quot;)&quot;
 val goto_line = &quot;(goto-line %sl)&quot;
 val fwd_char&nbsp;&nbsp;= &quot;(forward-char %sc)&quot;
 val highlight = &quot;(mlworks-highlight %sl %sc %el %ec)&quot;
 val raise_win = &quot;(raise-this-window)&quot;
 val full_dialog&nbsp;&nbsp;= [find_file, goto_line, fwd_char,
          &nbsp;highlight, raise_win]
in
 Shell.Editor.Custom.addConnectDialog(&quot;My Emacs&quot;,
                  &quot;Emacs&quot;,
                  full_dialog)
end</PRE></DL>
<P>The Windows editor PFE could be defined by:</P>
<DL><DD><PRE>let
 val DDE_service = &quot;PFE32&quot;
 val DDE_topic&nbsp;&nbsp;&nbsp;= &quot;Editor&quot;
 val file_open&nbsp;&nbsp;&nbsp;= &quot;[FileOpen(\&quot;%f\&quot;)]&quot;
 val file_visit&nbsp;&nbsp;= &quot;[FileVisit(\&quot;%f\&quot;)]&quot;
 val goto_line&nbsp;&nbsp;&nbsp;= &quot;[EditGotoLine(%sl,0)]&quot;
 val fwd_char&nbsp;&nbsp;&nbsp;&nbsp;= &quot;[CaretRight(%sc,0)]&quot;
 val highlight&nbsp;&nbsp;&nbsp;=
      &quot;[EditGotoLine(%el,1)][CaretRight(%ec,1)]&quot;
 val edit_dialog = [file_open, goto_line, fwd_char,
          highlight]
 val DDE_dialog&nbsp;&nbsp;=
        DDE_service&nbsp;::&nbsp;DDE_topic&nbsp;::&nbsp;edit_dialog</PRE></DL>
<DL><DD><PRE>in
 Shell.Editor.Custom.addConnectDialog(&quot;PFE32&quot;,
                  &quot;DDE&quot;,
                  DDE_dialog)
end</PRE></DL>
<P>Connect dialog strings can use the following codes:</P>
<DL>
<DT><CODE>%f</CODE><DD><P> A filename.</P>
<DT><CODE>%l</CODE> and <CODE>%sl</CODE><DD><P> Starting line number. </P>
<DT><CODE>%c</CODE> and <CODE>%sc</CODE><DD><P> Starting character number.</P>
<DT><CODE>%el</CODE><DD><P> Ending line number.</P>
<DT><CODE>%ec</CODE><DD><P> Ending character number. </P>
</DL>
<P>Use <CODE>%%</CODE> for the literal <CODE>%</CODE>. </P>

</DIV>

<DIV>

<DIV>

<!-- TOC -->

</DIV>

<HR>
<ADDRESS>MLWorks Reference Manual version 2.0 - 29 Jul 1998</ADDRESS>
<P><A HREF="RM_257.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="RM_255.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="RM_254.HTM"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="RM_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="RM_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="RM_418.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>Generated with <A HREF="http://www.harlequin.com/webmaker/">Harlequin WebMaker</A></P>

</DIV>
</BODY>
</HTML>
