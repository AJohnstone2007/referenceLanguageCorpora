<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<!-- Generated by Harlequin WebMaker 3.0.2 ( 8-May-1977) -->
<HEAD>
<LINK REL=TOP HREF="RM_1.HTM">
<LINK REL=UP HREF="RM_98.HTM">
<LINK REL=PREV HREF="RM_261.HTM">
<LINK REL=NEXT HREF="RM_263.HTM">
<TITLE>4.9   Inspecting values: the Inspector structure</TITLE>
<META NAME=GENERATOR CONTENT="Harlequin WebMaker 3.0.2 ( 8-May-1977)">
</HEAD>
<BODY BGCOLOR="#FFFFFF">

<DIV>
<A NAME=HEADING262></A>

<DIV>
<P><A HREF="RM_263.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="RM_261.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="RM_98.HTM"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="RM_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="RM_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="RM_418.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>4 The MLWorks Interactive Environment Library</P>

</DIV>
<A NAME=HEADING262-0></A>
<A NAME=UID-shell-885620></A>
<H1>4.9   <A NAME=MARKER-2-521></A>Inspecting values: the Inspector structure</H1>
<P>This <A NAME=MARKER-2-522></A>section examines the <CODE>Shell</CODE> commands for invoking an MLWorks TTY version of the inspector. Note that the TTY inspector can be invoked in the GUI environment's listener, which means that it is available on Windows as well as UNIX. For an explanation of the GUI inspector tool, see section 1.8 of this manual and Chapter 4 of the <I>MLWorks User Guide</I>.</P>
<P>The TTY inspector allows you to navigate the value being inspected recursively. At each stage it prints a numbered list of subvalues of the current value. It supports the following commands:</P>
<DL>
<DT><CODE>&lt;<I>field name&gt;</I></CODE><DD><P> Inspect named field of current value</P>
<DT><CODE>p</CODE><DD><P> Inspect parent value of current</P>
<DT><CODE>q</CODE><DD><P> Quit.</P>
</DL>
<P>The <CODE>Inspector</CODE> structure provides functions for adding and deleting inspector methods. Briefly, an inspector method is a function of type <CODE>t1 -&gt; t2</CODE> that will be applied whenever an object of type <CODE>t1</CODE> is being inspected. On subsequent inspection, values of type <CODE>t1</CODE> are inspected as if they were of type <CODE>t2</CODE>. Note that inspector methods must be compiled in debugging mode. </P>
<P>If a method is added then the inspector assumes that the method handles the printing and recursive navigation of the relevant data structure.</P>
<PRE>
structure Inspector:
&nbsp;&nbsp;sig
&nbsp;&nbsp;&nbsp;&nbsp;exception InspectError of string
&nbsp;&nbsp;&nbsp;&nbsp;val addInspectMethod: ('a -&gt; 'b) -&gt; unit
&nbsp;&nbsp;&nbsp;&nbsp;val deleteAllInspectMethods: unit -&gt; unit
&nbsp;&nbsp;&nbsp;&nbsp;val deleteInspectMethod: ('a -&gt; 'b) -&gt; unit
&nbsp;&nbsp;&nbsp;&nbsp;val inspectIt: unit -&gt; unit
&nbsp;&nbsp;end
</PRE>

</DIV>

<DIV>

<DIV>

<!-- TOC --><DL>
<DT><A REL=BELOW HREF="RM_263.HTM#HEADING263-0"><B></B>InspectError</A>
<DD>
<DT><A REL=BELOW HREF="RM_264.HTM#HEADING264-0"><B></B>addInspectMethod</A>
<DD>
<DT><A REL=BELOW HREF="RM_265.HTM#HEADING265-0"><B></B>deleteInspectMethod</A>
<DD>
<DT><A REL=BELOW HREF="RM_266.HTM#HEADING266-0"><B></B>deleteAllInspectMethods</A>
<DD>
<DT><A REL=BELOW HREF="RM_267.HTM#HEADING267-0"><B></B>inspectIt</A>
<DD>
</DL>


</DIV>

<HR>
<ADDRESS>MLWorks Reference Manual version 2.0 - 29 Jul 1998</ADDRESS>
<P><A HREF="RM_263.HTM"><IMG ALIGN=BOTTOM SRC=next.gif ALT=Next BORDER=0></A> <A HREF="RM_261.HTM"><IMG ALIGN=BOTTOM SRC=prev.gif ALT=Previous BORDER=0></A> <A HREF="RM_98.HTM"><IMG ALIGN=BOTTOM SRC=up.gif ALT=Up BORDER=0></A> <A HREF="RM_1.HTM"><IMG ALIGN=BOTTOM SRC=top.gif ALT=Top BORDER=0></A> <A HREF="RM_2.HTM"><IMG ALIGN=BOTTOM SRC=content.gif ALT=Contents BORDER=0></A> <A HREF="RM_418.HTM"><IMG ALIGN=BOTTOM SRC=index.gif ALT=Index BORDER=0></A></P>
<P>Generated with <A HREF="http://www.harlequin.com/webmaker/">Harlequin WebMaker</A></P>

</DIV>
</BODY>
</HTML>
