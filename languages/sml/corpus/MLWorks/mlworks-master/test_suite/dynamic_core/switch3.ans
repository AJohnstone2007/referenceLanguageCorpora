datatype Action =
  Funcall of (int * int * Action * Action) |
  NoAction |
  Reduce of (int * int * int) |
  Shift
val Funcall : (int * int * Action * Action) -> Action
val NoAction : Action
val Reduce : (int * int * int) -> Action
val Shift : Action
val convert_action : int -> Action = fn
val f : 'a -> bool = fn
val is_reduction : int -> bool = fn
