val it : unit = ()
structure S = struct ... end
structure D = struct ... end
val it : unit = ()
val fact : int -> int = fn
val it : unit = ()
Entering: fact 4
Entering debugger, commands: q : Return to top level, c : Continue interrupted code,  ? : more help
Current (innermost) stack frame:
fact 4
Debugger> Entering: fact 3
Debugger> Entering: fact 2
Debugger> (Current frame)
fact 2
fact 3
fact 4
(Outermost frame)
Debugger> val it : unit = ()
Entering: fact 4
Entering debugger, commands: q : Return to top level, c : Continue interrupted code,  ? : more help
Current (innermost) stack frame:
breakpoint_replacement<??>
Debugger> Entering: fact 3
Debugger> Entering: fact 2
Debugger> (Current frame)
step_always_replacement<??>
fact 2
step_always_replacement<??>
fact 3
breakpoint_replacement<??>
fact 4
(Outermost frame)
Debugger> val it : unit = ()
Entering: fact 4
Entering debugger, commands: q : Return to top level, c : Continue interrupted code,  ? : more help
Current (innermost) stack frame:
breakpoint_replacement<??>
Debugger> Entering: fact 3
Debugger> Entering: fact 2
Debugger> (Current frame)
step_always_replacement<??>
fact 2
fact 3
step_always_replacement<??>
fact 3
fact 4
breakpoint_replacement<??>
fact 4
(Outermost frame)
Debugger> 