infix 1 seq
val seq : ('a * 'b) -> 'b = fn
val check : bool -> string = fn
val check' : (unit -> bool) -> string = fn
val range : (int * int) -> (int -> bool) -> bool = fn
val checkrange : (int * int) -> (int -> bool) -> string = fn
val a : BinPrimIO.array = A(#B[0, 1, 2, 3, 4, 5, 6])
val a2v : BinPrimIO.array -> BinIO.vector = fn
val b : BinPrimIO.array = A(#B[44, 55, 66])
val c : BinPrimIO.array = A(#B[0, 1, 2, 3, 4, 5, 6])
val d : BinPrimIO.array = A(#B[0, 1, 2, 3, 4, 5, 6, 0, 1, 2, ..])
val e : BinPrimIO.array = A(#B[0, 1, 2, 3, 4, 5, 6, 0, 1, 2, ..])
val ev : BinIO.vector = _
val f : BinIO.vector = _
val g : BinPrimIO.array = A(#B[1, 2, 3, 4, 5, 6, 0, 1, 2, 3, ..])
val i2w : int -> BinIO.elem = fn
val test1 : string = "OK"
val test10a : string = "OK"
val test10b : string = "OK"
val test10c : string = "OK"
val test10d : string = "OK"
val test10e : string = "OK"
val test10f : string = "OK"
val test10g : string = "OK"
val test10h : string = "OK"
val test10i : string = "OK"
val test11a : string = "OK"
val test11b : string = "OK"
val test11c : string = "OK"
val test11d : string = "OK"
val test11e : string = "OK"
val test11f : string = "OK"
val test11g : string = "OK"
val test11h : string = "OK"
val test11i : string = "OK"
val test11j : string = "OK"
val test11k : string = "OK"
val test2 : string = "OK"
val test3 : string = "OK"
val test4a : string = "OK"
val test4b : string = "OK"
val test4c : string = "OK"
val test5a : string = "OK"
val test5b : string = "OK"
val test6a : string = "OK"
val test6b : string = "OK"
val test6c : string = "OK"
val test7 : string = "OK"
val test8a : string = "OK"
val test8b : string = "OK"
val test9 : string = "OK"
val test9a : string = "OK"
val test9b : string = "OK"
val test9c : string = "OK"
val test9d : string = "OK"
val test9e : string = "OK"
val test9f : string = "OK"
val test9g : string = "OK"
val test9h : string = "OK"
val test9i : string = "OK"
val w127 : BinIO.elem = 0w127
