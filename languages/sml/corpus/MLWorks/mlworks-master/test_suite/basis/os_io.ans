val ans : ((string * (bool * bool * bool)) * (string * (bool * bool)) * (string * bool) * (string * bool)) = (("compare", (true, true, true)), ("kind", (true, true)), ("pollDescA", true), ("pollDescB", true))
val applyToInDesc : string -> (OS.IO.iodesc -> 'a) -> 'a = fn
val applyToOutDesc : string -> (OS.IO.iodesc -> 'a) -> 'a = fn
val compare_test : (OS.IO.iodesc * OS.IO.iodesc) -> (bool * bool * bool) = fn
val kind_test : (OS.IO.iodesc * OS.IO.iodesc) -> (bool * bool) = fn
val pollDesc_test : OS.IO.iodesc -> bool = fn
