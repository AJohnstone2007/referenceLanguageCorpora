val it : unit = ()
val it : unit = ()
val it : unit = ()
val it : unit = ()
val it : {description: string, version: string} = {description="Dummy project", version="V1"}
val it : string list = ["Config"]
val it : string = "Config"
val it : {files: string list, library: string list} = {files=["files"], library=["library"]}
val it : {binariesLoc: string, libraryPath: string list, objectsLoc: string} = {binariesLoc="binariesLoc", libraryPath=["path1", "path2"], objectsLoc="objectsLoc"}
val it : string list = ["Mode", "Debug", "Release"]
val it : string = "Mode"
val it : {generate_debug_info: bool, generate_interceptable_code: bool, generate_interruptable_code: bool, generate_variable_debug_info: bool, location: string, mips_r4000: bool, optimize_leaf_fns: bool, optimize_self_tail_calls: bool, optimize_tail_calls: bool, sparc_v7: bool} = {generate_debug_info=true, generate_interceptable_code=false, generate_interruptable_code=true, generate_variable_debug_info=false, location="location", mips_r4000=false, optimize_leaf_fns=true, optimize_self_tail_calls=true, optimize_tail_calls=false, sparc_v7=true}
val it : string list = ["file1.sml", "sub_dir/file2.sml", "sub_dir2/file3.sml", "sub_dir/sub_sub_dir/file4.sml"]
val it : string list = ["subproject.mlp"]
val it : string list = ["file2.sml", "file4.sml", "file3.sml"]
val it : string list = ["file2.sml"]
val it : string = "The mode missing-mode is undefined"
val it : string = "The configuration missing-configuration is undefined"
val it : string = "The target missing-target is undefined"
val it : string = "Cannot remove missing-mode as it does not exist"
val it : string = "Cannot remove missing-configuration as it does not exist"
val it : string = "There is no target called missing-target"
val it : string = "Unable to set target details for invalid-target"
val it : string = "Cannot remove Mode as it is the current mode"
val it : unit = ()
val it : unit = ()
val it : string list = []
val it : unit = ()
val it : unit = ()
