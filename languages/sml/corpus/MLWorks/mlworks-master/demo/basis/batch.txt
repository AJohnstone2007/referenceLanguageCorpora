  Load File: __batch.sml
  
  This module demonstrates the OS.Process structure in the basis library.
  It defines a function that will execute multiple operating-system
  commands, and report upon their success.  Note that this module should 
  be delivered as an executable rather than run from a listener.
  
  To make an executable, compile and load the batch example using the
  project workspace, then deliver it, for instance by typing

     MLWorks.Deliver.deliver("batcheg",Batch.batch,MLWorks.Deliver.CONSOLE);

  in the listener (note that on Windows platforms MLWorks will exit after
  delivery).  

  The file batcheg (or on Windows batcheg.exe) is created in the
  MLWorks current directory and can then be run from the command-line 
  or console.

  An example of this under UNIX is

     prompt$ batcheg ls who

  giving a listing of the current directory and a list of people
  currently logged on, as well as reports on the success of the
  commands.

  Under Windows:

     C:\> batcheg.exe dir

  would give a listing of the current directory.

  Note that MLWorks executables depend on the MLWorks runtime shared library.
  On UNIX, if the executable fails to run you may need to check that
  your LD_LIBRARY_PATH environment variable is set correctly to include
  the bin subdirectory of your installation directory.

  Under Windows, if the DLL cannot be found, either add the bin 
  subdirectory of the current directory to your path environment variable,
  or run the executable from either the bin directory or the
  directory in which it is located.


