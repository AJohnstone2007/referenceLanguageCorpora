

class ID { 
int ID ; 
int ID ; 
int ID ; 

class ID { 
ID ID ; 
double ID ; 
double ID [ ] ; 
ID ID ; 

ID ( ) { this . ID = INTEGER ; this . ID = ID . ID ; ID = new ID [ ID ] ; } 
void ID ( ID ID ) { this . ID = ID ; } 
void ID ( double ID ) { this . ID = ID ; } 
void ID ( ID ID ) { this . ID = ID ; } 
} 

ID ID [ ] ; 

void ID ( int ID , ID ID ) { ID [ ID ] . ID ( ID ) ; } 
void ID ( int ID , double ID ) { ID [ ID ] . ID ( ID ) ; } 
void ID ( int ID , ID ID ) { ID [ ID ] . ID ( ID ) ; } 
void ID ( int ID , double ID ) { ID [ ID ] . ID [ ID ] = ID ; } 
void ID ( ) { ID = ( ID + INTEGER ) % ID [ INTEGER ] . ID . ID ; } 

class ID extends ID { 
ID ( ) { 
ID ( STRING ) ; 
ID ( new ID ( ) ) ; 
ID ( ID . ID ) ; 
ID ( ID + INTEGER , ID + INTEGER ) ; 
ID ( INTEGER , INTEGER ) ; 
ID ( ID ) ; 
} 
} 

class ID extends ID { 
protected void ID ( ID ID ) { 
super . ID ( ID ) ; 
for ( int ID = INTEGER ; ID < ID ; ID ++ ) 
for ( int ID = INTEGER ; ID < ID . ID ; ID ++ ) { 
ID . ID ( ID [ ID ] . ID ) ; 
double ID = ID [ ID ] . ID [ ID ] / ID [ ID ] . ID ; 
int ID = ID - ( int ) ( ( double ) ID * ID ) ; 
ID . ID ( ID , ID , INTEGER , INTEGER ) ; 
} 
} 
} 
ID ID ; 
void ID ( ) { ID . ID ( ) ; } 


ID ( int ID , int ID , int ID ) { 
this . ID = ID ; 
ID = INTEGER ; 
this . ID = ID ; 
ID = new ID [ ID ] ; 
for ( int ID = INTEGER ; ID < ID ; ID ++ ) ID [ ID ] = new ID ( ) ; 
ID = new ID ( ) ; 
} 
} 



class ID { 
class ID { double ID ; double ID ; ID ID ; ID ( double ID , double ID , ID ID ) { this . ID = ID ; this . ID = ID ; this . ID = ID ; } } ; 
ID ID [ ] ; 
ID ID [ ] ; 
double ID ; 
double ID ; 
double ID ; 
double ID ; 
int ID ; 

class ID extends ID { 
ID ( ) { 
ID ( STRING ) ; 
ID ( new ID ( ) ) ; 
ID ( ID . ID ) ; 
ID ( ( int ) ID + INTEGER , ( int ) ID + INTEGER ) ; 
ID ( ID ) ; 
} 
} 

class ID extends ID { 
protected void ID ( ID ID ) { 
super . ID ( ID ) ; 

ID . ID ( ID . ID ) ; ID . ID ( ( int ) ID - INTEGER , INTEGER , INTEGER , ( int ) ID ) ; 
ID . ID ( ID . ID ) ; 
for ( int ID = INTEGER ; ID < ID . ID ; ID ++ ) ID . ID ( ( int ) ID [ ID ] . ID - INTEGER , ( int ) ID [ ID ] . ID - INTEGER , INTEGER , INTEGER ) ; 
ID . ID ( ID . ID ) ; 
for ( int ID = INTEGER ; ID < ID . ID - INTEGER && ID < ID ; ID ++ ) ID . ID ( ( int ) ID [ ID ] . ID , ( int ) ID [ ID ] . ID , ( int ) ID [ ID + INTEGER ] . ID , ( int ) ID [ ID + INTEGER ] . ID ) ; 
ID . ID ( ( int ) ID [ ID . ID - INTEGER ] . ID , ( int ) ID [ ID . ID - INTEGER ] . ID , ( int ) ID [ INTEGER ] . ID , ( int ) ID [ INTEGER ] . ID ) ; 
} 
} 

ID ID ; 
void ID ( ) { ID . ID ( ) ; } 

ID ( int ID , double ID , double ID , double ID , double ID ) { 
this . ID = ID ; this . ID = ID ; this . ID = ID ; this . ID = ID ; 
ID ID = new ID ( ) ; 
ID . ID . ID ( STRING + ID + STRING + ID + STRING + ID + STRING ) ; 
ID = new ID [ ID ] ; 
ID = new ID [ ID ] ; 
ID = ID ; 
for ( int ID = INTEGER ; ID < ID . ID ; ID ++ ) { 
double ID ; 
do 
ID = ID . ID ( ) * ID ; 
while ( ( int ) ID > ID - INTEGER && ( int ) ID < ID + INTEGER ) ; 

ID [ ID ] = ID [ ID ] = new ID ( ID , ID . ID ( ) * ID , STRING ) ; 
} 
ID = new ID ( ) ; 
} 

void ID ( int ID , int ID ) { ID ID = ID [ ID ] ; ID [ ID ] = ID [ ID ] ; ID [ ID ] = ID ; } 
int ID ( ) { return ID . ID ; } 

void ID ( int ID , int ID ) { 
if ( ID > ID ) { int ID = ID ; ID = ID ; ID = ID ; } 

while ( ID < ID ) 
ID ( ID ++ , ID -- ) ; 
} 

boolean ID ( int ID , int ID ) { return ( ID [ ID ] . ID < ID && ID [ ID ] . ID > ID ) || ( ID [ ID ] . ID > ID && ID [ ID ] . ID < ID ) ; } 

double ID ( int ID , int ID ) { 
double ID = ID [ ID ] . ID - ID [ ID ] . ID , ID = ID [ ID ] . ID - ID [ ID ] . ID ; 
return ID . ID ( ID * ID + ID * ID ) + ( ID ( ID , ID ) ? ID : INTEGER ) ; 
} 

double ID ( ) { 
double ID = ID ( ID . ID - INTEGER , INTEGER ) ; 
for ( int ID = INTEGER ; ID < ID . ID ; ID ++ ) ID += ID ( ID , ID - INTEGER ) ; 
return ID ; 
} 

private int ID ; 
private int ID ; 
private int ID [ ] ; 
private int ID ; 

void ID ( int ID , int ID ) 
{ 
if ( ID > INTEGER ) { 
ID . ID . ID ( STRING + ID + STRING ) ; 
ID . ID ( INTEGER ) ; 
} 

if ( ( ID & ( INTEGER << ID ) ) != INTEGER ) 
return ; 

ID += INTEGER << ID ; 
if ( ID != ID . ID ) ID [ ID ++ ] = ID ; 

if ( ( ID & ID ) == ID ) 
{ 
for ( int ID = INTEGER ; ID < ID . ID ; ID ++ ) ID [ ID ] = ID [ ID [ ID ] ] ; 

double ID = ID ( ) ; 

ID ( ) ; 
ID ++ ; 
if ( ID % INTEGER == INTEGER ) ID . ID . ID ( STRING , ID ) ; 
} 
else 
for ( ID = INTEGER ; ID < ID . ID ; ID ++ ) ID ( ID , ID ) ; 

-- ID ; 
} 

void ID ( ) { 
ID = INTEGER ; 
ID = INTEGER ; 
for ( int ID = INTEGER ; ID < ID . ID ; ID ++ ) 
ID *= INTEGER ; 
ID -- ; 
ID = INTEGER ; 
ID = new ID [ ID . ID ] ; 
long ID = ID . ID ( ) ; 
ID ( ID . ID , INTEGER ) ; 
long ID = ID . ID ( ) - ID ; 
float ID = ID / INTEGER ; 
ID . ID . ID ( STRING , ID , ID ) ; 
} 

void ID ( ) { 
ID . ID . ID ( STRING + ID . ID + STRING ) ; 
ID ID [ ] = new ID [ ID . ID ] ; 
for ( int ID = INTEGER ; ID < ID . ID ; ID ++ ) ID [ ID ] = ID ; 

ID [ INTEGER ] = ID [ INTEGER ] ; ID [ INTEGER ] = ID ; 
for ( int ID = INTEGER ; ID < ID . ID ; ID ++ ) { 
int ID = ID ; 
double ID = ID . ID ; 

for ( int ID = INTEGER ; ID < ID . ID ; ID ++ ) { 
if ( ! ID [ ID ] ) { 
ID [ ID ] = ID [ ID ] ; 
double ID = ID ( ID - INTEGER , ID ) ; 

if ( ID < ID ) { 
ID = ID ; 
ID = ID ; 
} 
} 
} 
ID [ ID ] = ID [ ID ] ; ID [ ID ] = ID ; 

} 
double ID = ID ( ) ; 
ID . ID . ID ( STRING + ID ) ; 

ID ( ) ; 
} 
} 

class ID { 
ID ID ; 
ID ( ID ID ) { this . ID = ID ; } 

void ID ( double ID , double ID , int ID , int ID ) { 
int ID , ID , ID = INTEGER ; 
double ID = ID . ID ( ) ; 
ID ID = new ID ( ) ; 
ID ID = new ID ( INTEGER , INTEGER , INTEGER ) ; 
ID . ID ( INTEGER , STRING ) ; ID . ID ( INTEGER , ID . ID ) ; ID . ID ( INTEGER , ID ) ; 
ID . ID ( INTEGER , STRING ) ; ID . ID ( INTEGER , ID . ID ) ; ID . ID ( INTEGER , ID . ID ( ) * REAL ) ; 
ID . ID ( INTEGER , STRING ) ; ID . ID ( INTEGER , ID . ID ) ; ID . ID ( INTEGER , ID ) ; 
ID . ID ( INTEGER , STRING ) ; ID . ID ( INTEGER , ID . ID ) ; ID . ID ( INTEGER , ID ) ; 

long ID = ID . ID ( ) ; 

do { 
ID = ID = INTEGER ; 
do { 
double ID , ID ; 
int ID = ID . ID ( ID . ID ( ) ) , ID = ID . ID ( ID . ID ( ) ) ; 

ID . ID ( ID , ID ) ; 
ID = ID . ID ( ) ; 
ID = ID - ID ; 

if ( ID < INTEGER || ID . ID ( ) < ID . ID ( - ID / ID ) ) { 
ID ++ ; 
ID = ID ; 
} 
else { 
ID ++ ; 
ID . ID ( ID , ID ) ; 
} 
} while ( ID < ID && ID < ID ) ; 

ID . ID . ID ( STRING , ID ++ , ID , ID , ID , ID ) ; 
ID . ID ( INTEGER , ID ) ; ID . ID ( INTEGER , ID ) ; ID . ID ( INTEGER , ID ) ; ID . ID ( INTEGER , ID ) ; ID . ID ( ) ; 
ID . ID ( ) ; 
ID . ID ( ) ; 
ID *= ID ; 
} while ( ID > REAL && ID > INTEGER ) ; 
long ID = ID . ID ( ) - ID ; 
float ID = ID / INTEGER ; 
ID . ID . ID ( STRING , ID ) ; 
} 
} 

class ID { 
public static void ID ( ID [ ] ID ) throws ID , ID { 
if ( ID . ID == INTEGER && ( ID [ INTEGER ] . ID ( STRING ) || ID [ INTEGER ] . ID ( STRING ) ) ) { 
ID . ID . ID ( STRING + 
STRING + 
STRING + 
STRING + 
STRING + 
STRING ) ; 
ID . ID ( INTEGER ) ; 
} 

int ID = INTEGER ; 
int ID = INTEGER ; 
int ID = INTEGER ; 
int ID = - INTEGER ; 
int ID = INTEGER ; 
double ID = INTEGER ; 
double ID = REAL ; 
int ID = INTEGER ; 
int ID = INTEGER ; 
int ID = INTEGER ; 
int ID = INTEGER ; 
int ID = INTEGER ; 
boolean ID = ID , ID = ID , ID = ID ; 

for ( int ID = INTEGER ; ID < ID . ID ; ) { 
ID . ID . ID ( STRING + ID + STRING + ID . ID ) ; 
if ( ID [ ID ] . ID ( STRING ) ) { 
if ( ID + INTEGER > ID . ID ) 
ID = ID . ID ; 
else { 
ID ++ ; 
ID = ID . ID ( ID [ ID ++ ] ) ; 
ID = ID . ID ( ID [ ID ++ ] ) ; 
ID = ID . ID ( ID [ ID ++ ] ) ; 
} 
} 
else if ( ID [ ID ] . ID ( STRING ) ) { 
if ( ID + INTEGER > ID . ID ) 
ID = ID . ID ; 
else { 
ID ++ ; 
ID = ID . ID ( ID [ ID ++ ] ) ; 
ID = ID . ID ( ID [ ID ++ ] ) ; 
} 
} 
else if ( ID [ ID ] . ID ( STRING ) ) { 
ID = ID ; ID = ID ; ID = ID ; 
if ( ID + INTEGER > ID . ID ) 
ID = ID . ID ; 
else { 
ID ++ ; 
ID = ID . ID ( ID [ ID ++ ] ) ; 
ID = ID . ID ( ID [ ID ++ ] ) ; 
ID = ID . ID ( ID [ ID ++ ] ) ; 
ID = ID . ID ( ID [ ID ++ ] ) ; 
} 
} 
else if ( ID [ ID ] . ID ( STRING ) ) { 
if ( ID + INTEGER > ID . ID ) 
ID = ID . ID ; 
else { 
ID ++ ; 
ID = ID . ID ( ID [ ID ++ ] ) ; 
ID = ID . ID ( ID [ ID ++ ] ) ; 
ID = ID . ID ( ID [ ID ++ ] ) ; 
} 
} 
else if ( ID [ ID ] . ID ( STRING ) ) { 
ID = ID ; ID = ID ; ID = ID ; 
ID ++ ; 
} 
else if ( ID [ ID ] . ID ( STRING ) ) { 
ID = ID ; ID = ID ; ID = ID ; 
ID ++ ; 
} 
} 

ID ID = new ID ( ID , ID , ID , ID , ID ) ; 
ID ID = new ID ( ID ) ; 

if ( ID ) 
ID . ID ( ) ; 

if ( ID ) 
ID . ID ( ID , ID , ID , ID ) ; 

if ( ID ) 
ID . ID ( ) ; 
} 
} 
